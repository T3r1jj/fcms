# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    environment:
      GRADLE_OPTS: -Xmx2048m -Dorg.gradle.daemon=false

    working_directory: ~/repo

    steps:
      - checkout

      - run: chmod +x ./gradlew

      # Download and cache dependencies
      - restore_cache:
          keys:
            - gradle-cache3-{{ checksum "backend/build.gradle" }}-{{ checksum "frontend/build.gradle" }}
            - node-cache3-{{ checksum "frontend/package.json" }}-{{ checksum "frontend/yarn.lock" }}

      - run: ./gradlew build

      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-cache3-{{ checksum "backend/build.gradle" }}-{{ checksum "frontend/build.gradle" }}

      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules
            - frontend/node_modules
          key: node-cache3-{{ checksum "frontend/package.json" }}-{{ checksum "frontend/yarn.lock" }}

      - run: bash <(curl -s https://codecov.io/bash)

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/backend
            mkdir -p ~/junit/frontend
            find . -type f -regex ".*/build/test-results/*/.*xml" -exec cp {} ~/junit/backend/ \;
            find . -type f -regex ".*/junit.xml" -exec cp {} ~/junit/frontend/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit